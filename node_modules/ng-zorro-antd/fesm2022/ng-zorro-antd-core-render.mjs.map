{"version":3,"file":"ng-zorro-antd-core-render.mjs","sources":["../../components/core/render/after-next-render.ts","../../components/core/render/public-api.ts","../../components/core/render/ng-zorro-antd-core-render.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken, Injector, afterNextRender, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * An injection token representing `afterNextRender` as an observable rather\n * than a callback-based API has been added. This might be necessary in code\n * where streams of data are already being used and we need to wait until\n * the change detection ends before performing any tasks.\n */\nexport const NZ_AFTER_NEXT_RENDER$ = new InjectionToken<Observable<void>>('nz-after-next-render', {\n  providedIn: 'root',\n  factory: () => {\n    const injector = inject(Injector);\n\n    return new Observable<void>(subscriber => {\n      const ref = afterNextRender(\n        () => {\n          subscriber.next();\n          subscriber.complete();\n        },\n        { injector }\n      );\n\n      return () => ref.destroy();\n    });\n  }\n});\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './after-next-render';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;AAAA;;;AAGG;AAKH;;;;;AAKG;MACU,qBAAqB,GAAG,IAAI,cAAc,CAAmB,sBAAsB,EAAE;AAChG,IAAA,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,MAAK;AACZ,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAEjC,QAAA,OAAO,IAAI,UAAU,CAAO,UAAU,IAAG;AACvC,YAAA,MAAM,GAAG,GAAG,eAAe,CACzB,MAAK;gBACH,UAAU,CAAC,IAAI,EAAE;gBACjB,UAAU,CAAC,QAAQ,EAAE;AACvB,aAAC,EACD,EAAE,QAAQ,EAAE,CACb;AAED,YAAA,OAAO,MAAM,GAAG,CAAC,OAAO,EAAE;AAC5B,SAAC,CAAC;;AAEL,CAAA;;AC/BD;;;AAGG;;ACHH;;AAEG;;;;"}