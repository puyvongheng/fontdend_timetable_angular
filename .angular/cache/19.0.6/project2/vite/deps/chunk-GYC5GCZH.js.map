{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-spin.mjs"],
  "sourcesContent": ["import { __esDecorate, __runInitializers } from 'tslib';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { numberAttribute, booleanAttribute, Component, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, ReplaySubject, timer } from 'rxjs';\nimport { startWith, distinctUntilChanged, switchMap, debounce, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i2 from '@angular/cdk/bidi';\nconst _c0 = [\"*\"];\nfunction NzSpinComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵelement(1, \"i\", 3)(2, \"i\", 3)(3, \"i\", 3)(4, \"i\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzSpinComponent_Conditional_2_ng_template_2_Template(rf, ctx) {}\nfunction NzSpinComponent_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.nzTip);\n  }\n}\nfunction NzSpinComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4);\n    i0.ɵɵtemplate(2, NzSpinComponent_Conditional_2_ng_template_2_Template, 0, 0, \"ng-template\", 5)(3, NzSpinComponent_Conditional_2_Conditional_3_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const defaultTemplate_r2 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"ant-spin-rtl\", ctx_r0.dir === \"rtl\")(\"ant-spin-spinning\", ctx_r0.isLoading)(\"ant-spin-lg\", ctx_r0.nzSize === \"large\")(\"ant-spin-sm\", ctx_r0.nzSize === \"small\")(\"ant-spin-show-text\", ctx_r0.nzTip);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzIndicator || defaultTemplate_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.nzTip ? 3 : -1);\n  }\n}\nfunction NzSpinComponent_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-spin-blur\", ctx_r0.isLoading);\n  }\n}\nconst NZ_CONFIG_MODULE_NAME = 'spin';\nlet NzSpinComponent = (() => {\n  let _nzIndicator_decorators;\n  let _nzIndicator_initializers = [];\n  let _nzIndicator_extraInitializers = [];\n  return class NzSpinComponent {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      _nzIndicator_decorators = [WithConfig()];\n      __esDecorate(null, null, _nzIndicator_decorators, {\n        kind: \"field\",\n        name: \"nzIndicator\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzIndicator\" in obj,\n          get: obj => obj.nzIndicator,\n          set: (obj, value) => {\n            obj.nzIndicator = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzIndicator_initializers, _nzIndicator_extraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    constructor(nzConfigService, cdr, directionality) {\n      this.nzConfigService = nzConfigService;\n      this.cdr = cdr;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzIndicator = __runInitializers(this, _nzIndicator_initializers, null);\n      this.nzSize = (__runInitializers(this, _nzIndicator_extraInitializers), 'default');\n      this.nzTip = null;\n      this.nzDelay = 0;\n      this.nzSimple = false;\n      this.nzSpinning = true;\n      this.destroy$ = new Subject();\n      this.spinning$ = new BehaviorSubject(this.nzSpinning);\n      this.delay$ = new ReplaySubject(1);\n      this.isLoading = false;\n      this.dir = 'ltr';\n    }\n    ngOnInit() {\n      const loading$ = this.delay$.pipe(startWith(this.nzDelay), distinctUntilChanged(), switchMap(delay => {\n        if (delay === 0) {\n          return this.spinning$;\n        }\n        return this.spinning$.pipe(debounce(spinning => timer(spinning ? delay : 0)));\n      }), takeUntil(this.destroy$));\n      loading$.subscribe(loading => {\n        this.isLoading = loading;\n        this.cdr.markForCheck();\n      });\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => this.cdr.markForCheck());\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n      const {\n        nzSpinning,\n        nzDelay\n      } = changes;\n      if (nzSpinning) {\n        this.spinning$.next(this.nzSpinning);\n      }\n      if (nzDelay) {\n        this.delay$.next(this.nzDelay);\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static {\n      this.ɵfac = function NzSpinComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NzSpinComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: NzSpinComponent,\n        selectors: [[\"nz-spin\"]],\n        hostVars: 2,\n        hostBindings: function NzSpinComponent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ant-spin-nested-loading\", !ctx.nzSimple);\n          }\n        },\n        inputs: {\n          nzIndicator: \"nzIndicator\",\n          nzSize: \"nzSize\",\n          nzTip: \"nzTip\",\n          nzDelay: [2, \"nzDelay\", \"nzDelay\", numberAttribute],\n          nzSimple: [2, \"nzSimple\", \"nzSimple\", booleanAttribute],\n          nzSpinning: [2, \"nzSpinning\", \"nzSpinning\", booleanAttribute]\n        },\n        exportAs: [\"nzSpin\"],\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature],\n        ngContentSelectors: _c0,\n        decls: 4,\n        vars: 2,\n        consts: [[\"defaultTemplate\", \"\"], [1, \"ant-spin-container\", 3, \"ant-spin-blur\"], [1, \"ant-spin-dot\", \"ant-spin-dot-spin\"], [1, \"ant-spin-dot-item\"], [1, \"ant-spin\"], [3, \"ngTemplateOutlet\"], [1, \"ant-spin-text\"], [1, \"ant-spin-container\"]],\n        template: function NzSpinComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, NzSpinComponent_ng_template_0_Template, 5, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, NzSpinComponent_Conditional_2_Template, 4, 12, \"div\")(3, NzSpinComponent_Conditional_3_Template, 2, 2, \"div\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx.isLoading ? 2 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(!ctx.nzSimple ? 3 : -1);\n          }\n        },\n        dependencies: [NgTemplateOutlet],\n        encapsulation: 2\n      });\n    }\n  };\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-spin',\n      exportAs: 'nzSpin',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    @if (isLoading) {\n      <div>\n        <div\n          class=\"ant-spin\"\n          [class.ant-spin-rtl]=\"dir === 'rtl'\"\n          [class.ant-spin-spinning]=\"isLoading\"\n          [class.ant-spin-lg]=\"nzSize === 'large'\"\n          [class.ant-spin-sm]=\"nzSize === 'small'\"\n          [class.ant-spin-show-text]=\"nzTip\"\n        >\n          <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n          @if (nzTip) {\n            <div class=\"ant-spin-text\">{{ nzTip }}</div>\n          }\n        </div>\n      </div>\n    }\n    @if (!nzSimple) {\n      <div class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n        <ng-content></ng-content>\n      </div>\n    }\n  `,\n      host: {\n        '[class.ant-spin-nested-loading]': '!nzSimple'\n      },\n      imports: [NgTemplateOutlet]\n    }]\n  }], () => [{\n    type: i1.NzConfigService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2.Directionality\n  }], {\n    nzIndicator: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzTip: [{\n      type: Input\n    }],\n    nzDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzSimple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzSpinning: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpinModule {\n  static {\n    this.ɵfac = function NzSpinModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzSpinModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzSpinModule,\n      imports: [NzSpinComponent],\n      exports: [NzSpinComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzSpinComponent],\n      exports: [NzSpinComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpinComponent, NzSpinModule };\n"],
  "mappings": "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",
  "names": ["NzSpinComponent"]
}
